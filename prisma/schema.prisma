// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id String @id @default(uuid())
  name String
  userId String
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[] @relation("StoreToCategory")
  colors Color[] @relation("StoreToColor")
  sizes Size[] @relation("StoreToSize")
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Billboard {
  id String @id @default(uuid())
  label String
  imageUrl String
  imageCode String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storeId String
  categries Category[]
  store Store @relation("StoreToBillboard", fields: [storeId], references: [id])
  @@index([storeId])
}

model Category {
  id String @id @default(uuid())
  name String
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  storeId String
  billboardId String
  store Store @relation("StoreToCategory", fields: [storeId], references: [id])
  billboard Billboard @relation(fields: [billboardId], references: [id])
  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id String @id @default(uuid())
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storeId String
  store Store @relation("StoreToSize", fields: [storeId], references: [id])
  @@index([storeId])
}

model Color {
  id String @id @default(uuid())
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storeId String
  store Store @relation("StoreToColor", fields: [storeId], references: [id])
  @@index([storeId])
}